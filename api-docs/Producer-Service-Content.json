{
  "apiVersion": "1.0",
  "swaggerVersion": "1.2",
  "basePath": "http://localhost/release.2015.6",
  "resourcePath": "/Content",
  "apis": [
    {
      "path": "/publication/{publicationID :[0-9a-f]{8}(-[0-9a-f]{4}){3}-[0-9a-f]{12} }/{entityType :(article|banner|cardTemplate|collection|layout|publication|sharedContent) }/{entityName :[0-9a-zA-Z]{1}[0-9a-zA-Z_ %.-]{0,63} }/{contents:contents}/{contentPath :(.+)}",
      "operations": [
        {
          "method": "DELETE",
          "summary": "Deletes existing content as a pending change to an entity's content bucket.",
          "notes": "The contentVersion parameter is the version of the content bucket, not the version of the entity.  The client supplied Upload ID in the x-dps-upload-id header parameter should be a GUID, as managed by the client, to group a set of asset changes to be applied during the content commit operation.",
          "type": "void",
          "nickname": "deleteContent",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "x-dps-upload-id",
              "description": "A GUID for grouping a set of pending content changes to be committed together",
              "required": false,
              "type": "UploadID",
              "paramType": "header",
              "allowMultiple": false
            },
            {
              "name": "publicationID",
              "description": "Publication identifier (GUID)",
              "defaultValue": "1bb5bcf0-d173-43db-8fc1-87fe64b66dfa",
              "required": true,
              "type": "PublicationID",
              "paramType": "path",
              "allowMultiple": false
            },
            {
              "name": "entityType",
              "description": "Entity type, e.g. article or  collection",
              "defaultValue": "article",
              "required": true,
              "type": "EntityType",
              "paramType": "path",
              "allowMultiple": false
            },
            {
              "name": "entityName",
              "description": "Client defined Entity name",
              "defaultValue": "article001",
              "required": true,
              "type": "EntityName",
              "paramType": "path",
              "allowMultiple": false
            },
            {
              "name": "contents",
              "description": "A path segment consisting of \"contents;contentVersion=xxxx\" to identify the content bucket version",
              "defaultValue": "contents;contentVersion=1413576316126",
              "required": true,
              "type": "PathSegment",
              "paramType": "path",
              "allowMultiple": false
            },
            {
              "name": "contentPath",
              "description": "Entity-relative location of the asset. A trailing wildcard is supported for multiple asset deletion; e.g., contents/folioDir/*.",
              "defaultValue": "path/to/file.ext",
              "required": true,
              "type": "string",
              "paramType": "path",
              "allowMultiple": false
            }
          ],
          "responseMessages": [
            {
              "code": 204,
              "message": "Successfully deleted content"
            },
            {
              "code": 403,
              "message": "Forbidden - ObjectLocked: another user has the entity locked"
            },
            {
              "code": 404,
              "message": "Not Found - specified content path does not exist"
            },
            {
              "code": 409,
              "message": "Version conflict - specified version is not the latest."
            }
          ]
        },
        {
          "method": "GET",
          "summary": "Retrieves the committed asset specified by the content path.",
          "notes": "The contentVersion parameter is the version of the content bucket, not the version of the entity.  Only committed assets may be listed or retrieved this way, not those which have only been uploaded as part of a pending change.",
          "type": "void",
          "nickname": "getEntityContent",
          "produces": [
            "*/*"
          ],
          "consumes": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "publicationID",
              "description": "Publication identifier (GUID)",
              "defaultValue": "1bb5bcf0-d173-43db-8fc1-87fe64b66dfa",
              "required": true,
              "type": "PublicationID",
              "paramType": "path",
              "allowMultiple": false
            },
            {
              "name": "entityType",
              "description": "Entity type, e.g. article or  collection",
              "defaultValue": "article",
              "required": true,
              "type": "EntityType",
              "paramType": "path",
              "allowMultiple": false
            },
            {
              "name": "entityName",
              "description": "Client defined Entity name",
              "defaultValue": "article001",
              "required": true,
              "type": "EntityName",
              "paramType": "path",
              "allowMultiple": false
            },
            {
              "name": "contents",
              "description": "A path segment consisting of \"contents;contentVersion=xxxx\" to identify the content bucket version",
              "defaultValue": "contents;contentVersion=1413576316126",
              "required": true,
              "type": "PathSegment",
              "paramType": "path",
              "allowMultiple": false
            },
            {
              "name": "contentPath",
              "description": "Entity-relative location of the asset. A trailing wildcard is supported for multiple asset deletion; e.g., contents/folioDir/*.",
              "defaultValue": "path/to/file.ext",
              "required": true,
              "type": "string",
              "paramType": "path",
              "allowMultiple": false
            }
          ],
          "responseMessages": [
            {
              "code": 200,
              "message": "Content returned for the entity's specified content path"
            },
            {
              "code": 404,
              "message": "Specified content was not found"
            }
          ]
        },
        {
          "method": "HEAD",
          "summary": "Retrieves the header information only of a committed asset specified by the content path.",
          "notes": "Performs the same operation as the corresponding GET call, except that no content is returned in a response body.  Only the response headers of the GET operation are returned.  The contentVersion parameter is the version of the content bucket, not the version of the entity.  Only committed assets may be listed or retrieved this way, not those which have only been uploaded as part of a pending change.",
          "type": "void",
          "nickname": "headEntityContent",
          "parameters": [
            {
              "name": "publicationID",
              "description": "Publication identifier (GUID)",
              "defaultValue": "1bb5bcf0-d173-43db-8fc1-87fe64b66dfa",
              "required": true,
              "type": "PublicationID",
              "paramType": "path",
              "allowMultiple": false
            },
            {
              "name": "entityType",
              "description": "Entity type, e.g. article or  collection",
              "defaultValue": "article",
              "required": true,
              "type": "EntityType",
              "paramType": "path",
              "allowMultiple": false
            },
            {
              "name": "entityName",
              "description": "Client defined Entity name",
              "defaultValue": "article001",
              "required": true,
              "type": "EntityName",
              "paramType": "path",
              "allowMultiple": false
            },
            {
              "name": "contents",
              "description": "A path segment consisting of \"contents;contentVersion=xxxx\" to identify the content bucket version",
              "defaultValue": "contents;contentVersion=1413576316126",
              "required": true,
              "type": "PathSegment",
              "paramType": "path",
              "allowMultiple": false
            },
            {
              "name": "contentPath",
              "description": "Entity-relative location of the asset. A trailing wildcard is supported for multiple asset deletion; e.g., contents/folioDir/*.",
              "defaultValue": "path/to/file.ext",
              "required": true,
              "type": "string",
              "paramType": "path",
              "allowMultiple": false
            }
          ],
          "responseMessages": [
            {
              "code": 200,
              "message": "Headers returned for the entity's specified content path"
            },
            {
              "code": 404,
              "message": "Specified content was not found"
            }
          ]
        },
        {
          "method": "PUT",
          "summary": "Uploads new content, or updates existing content, as a pending change to an entity's content bucket.",
          "notes": "The contentVersion parameter is the version of the content bucket, not the version of the entity.<br><br>The client supplied Upload ID in the x-dps-upload-id header parameter should be a GUID, as managed by the client, to group a set of asset changes to be applied during the content commit operation.<br><br>A note about downsampling of any image (for example, thumbnails, social sharing, collection background, publication logo): When uploading an image for which you'd like downsampled images created, pass in the x-dps-image-sizes header, along with the desired sizes. When using this header, the response will be a JSON snippet containing the field's new data specifying the downsampled sizes and content references to those various sizes. Set the field on the containing entity to this JSON snippet on a subsequent entity PUT call.",
          "type": "void",
          "nickname": "createOrUpdateContent",
          "produces": [
            "application/json"
          ],
          "consumes": [
            "*/*"
          ],
          "parameters": [
            {
              "name": "Content-Type",
              "required": false,
              "type": "string",
              "paramType": "header",
              "allowMultiple": false
            },
            {
              "name": "Content-Length",
              "required": false,
              "type": "integer",
              "format": "int64",
              "paramType": "header",
              "allowMultiple": false
            },
            {
              "name": "Content-MD5",
              "required": false,
              "type": "string",
              "paramType": "header",
              "allowMultiple": false
            },
            {
              "name": "x-dps-upload-id",
              "description": "A GUID for grouping a set of pending content changes to be committed together",
              "required": false,
              "type": "UploadID",
              "paramType": "header",
              "allowMultiple": false
            },
            {
              "name": "x-dps-image-sizes",
              "description": "A list of comma-separated integers specifying downsampled sizes that may later be requested",
              "required": false,
              "type": "string",
              "paramType": "header",
              "allowMultiple": false
            },
            {
              "name": "publicationID",
              "description": "Publication identifier (GUID)",
              "defaultValue": "1bb5bcf0-d173-43db-8fc1-87fe64b66dfa",
              "required": true,
              "type": "PublicationID",
              "paramType": "path",
              "allowMultiple": false
            },
            {
              "name": "entityType",
              "description": "Entity type, e.g. article or  collection",
              "defaultValue": "article",
              "required": true,
              "type": "EntityType",
              "paramType": "path",
              "allowMultiple": false
            },
            {
              "name": "entityName",
              "description": "Client defined Entity name",
              "defaultValue": "article001",
              "required": true,
              "type": "EntityName",
              "paramType": "path",
              "allowMultiple": false
            },
            {
              "name": "contents",
              "description": "A path segment consisting of \"contents;contentVersion=xxxx\" to identify the content bucket version",
              "defaultValue": "contents;contentVersion=1413576316126",
              "required": true,
              "type": "PathSegment",
              "paramType": "path",
              "allowMultiple": false
            },
            {
              "name": "contentPath",
              "description": "Entity-relative location of the asset. A trailing wildcard is supported for multiple asset deletion; e.g., contents/folioDir/*.",
              "defaultValue": "path/to/file.ext",
              "required": true,
              "type": "string",
              "paramType": "path",
              "allowMultiple": false
            },
            {
              "name": "body",
              "required": false,
              "type": "java.io.InputStream",
              "paramType": "body",
              "allowMultiple": false
            }
          ],
          "responseMessages": [
            {
              "code": 200,
              "message": "Successfully created or updated existing content"
            },
            {
              "code": 400,
              "message": "Bad Request - one of the parameters was invalid; more detail in the response body"
            },
            {
              "code": 403,
              "message": "Forbidden - user's quota exceeded."
            },
            {
              "code": 409,
              "message": "Version conflict - specified version is not the latest."
            }
          ]
        }
      ]
    },
    {
      "path": "/publication/{publicationID :[0-9a-f]{8}(-[0-9a-f]{4}){3}-[0-9a-f]{12} }/{entityType :(article|banner|cardTemplate|collection|layout|publication|sharedContent) }/{entityName :[0-9a-zA-Z]{1}[0-9a-zA-Z_ %.-]{0,63} }/{contents:contents}",
      "operations": [
        {
          "method": "GET",
          "summary": "Retrieves the manifest of all committed assets associated with the specified version of content bucket for this entity.",
          "notes": "The contentVersion parameter is the version of the content bucket, not the version of the entity.  Only committed assets may be listed or retrieved this way, not those which have only been uploaded as part of a pending change.",
          "type": "void",
          "nickname": "getContentManifest",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "publicationID",
              "description": "Publication identifier (GUID)",
              "defaultValue": "1bb5bcf0-d173-43db-8fc1-87fe64b66dfa",
              "required": true,
              "type": "PublicationID",
              "paramType": "path",
              "allowMultiple": false
            },
            {
              "name": "entityType",
              "description": "Entity type, e.g. article or  collection",
              "defaultValue": "article",
              "required": true,
              "type": "EntityType",
              "paramType": "path",
              "allowMultiple": false
            },
            {
              "name": "entityName",
              "description": "Client defined Entity name",
              "defaultValue": "article001",
              "required": true,
              "type": "EntityName",
              "paramType": "path",
              "allowMultiple": false
            },
            {
              "name": "contents",
              "description": "A path segment consisting of \"contents;contentVersion=xxxx\" to identify the content bucket version",
              "defaultValue": "contents;contentVersion=1413576316126",
              "required": true,
              "type": "PathSegment",
              "paramType": "path",
              "allowMultiple": false
            }
          ]
        }
      ]
    }
  ],
  "models": {
    "PathSegment": {
      "id": "PathSegment",
      "properties": {
        "matrixParameters": {
          "$ref": "javax.ws.rs.core.MultivaluedMap<java.lang.String, java.lang.String>"
        },
        "path": {
          "type": "string"
        }
      }
    }
  }
}